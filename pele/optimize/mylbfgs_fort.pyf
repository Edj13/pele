!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module mylbfgs__user__routines 
    interface mylbfgs_user_interface 
        subroutine potential(xcoords,grad,energy,n) ! in :mylbfgs_fort:mylbfgs_fort.f90:mylbfgs:unknown_interface
            intent(callback) potential
            double precision dimension(n),intent(in) :: xcoords
            double precision dimension(n),intent(out),depend(n) :: grad
            double precision intent(out) :: energy
            integer, optional,intent(in),check(len(xcoords)>=n),depend(xcoords) :: n=len(xcoords)
        end subroutine potential
    end interface mylbfgs_user_interface
end python module mylbfgs__user__routines
python module mylbfgs_fort ! in 
    interface  ! in :mylbfgs_fort
        subroutine mylbfgs(n,m,xcoords,eps,mflag,energy,itmax,itdone,npotcalls,maxbfgs,maxerise,grad) ! in :mylbfgs_fort:mylbfgs_fort.f90
            use mylbfgs__user__routines
            integer, optional,intent(in),check(len(xcoords)>=n),depend(xcoords) :: n=len(xcoords)
            integer intent(in) :: m
            double precision dimension(n),intent(in,out) :: xcoords
            double precision intent(in) :: eps
            logical intent(out) :: mflag
            double precision intent(out) :: energy
            integer intent(in) :: itmax
            integer intent(out) :: itdone
            integer intent(out) :: npotcalls
            double precision intent(in) :: maxbfgs
            double precision intent(in) :: maxerise
            double precision dimension(n),intent(out),depend(n) :: grad
            intent(callback) potential
            external potential
        end subroutine mylbfgs
        function ddot(n,dx,incx,dy,incy) ! in :mylbfgs_fort:mylbfgs_fort.f90
            integer, optional,intent(in),check(len(dx)>=n),depend(dx) :: n=len(dx)
            double precision dimension(n),intent(in) :: dx
            integer intent(in) :: incx
            double precision dimension(n),intent(in),depend(n) :: dy
            integer intent(in) :: incy
            double precision :: ddot
        end function ddot
        subroutine daxpy(n,da,dx,incx,dy,incy) ! in :mylbfgs_fort:mylbfgs_fort.f90
            integer, optional,intent(in),check(len(dx)>=n),depend(dx) :: n=len(dx)
            double precision intent(in) :: da
            double precision dimension(n),intent(in) :: dx
            integer intent(in) :: incx
            double precision dimension(n),intent(in,out),depend(n) :: dy
            integer intent(in) :: incy
        end subroutine daxpy
    end interface 
end python module mylbfgs_fort

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
